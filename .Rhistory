hm <- pheatmap(
# data
mat               = vsd_cor_Object[mat_cluster_rows$order, mat_cluster_cols$order], # manually ordered as in clusters
scale             = "none", # otherwise numbers are changed
cellwidth         = 15,
cellheight        = 15,
# title
main              = main.title,
fontsize          = 14,
# rows
cluster_rows      = FALSE,#mat_cluster_rows,
#treeheight_row    = 25, # default is 50
#cutree_rows       = 4,
gaps_row          = c(6,9,12,14),
show_rownames     = TRUE,
labels_row        = labels_sample$sample[mat_cluster_rows$order],
fontsize_row      = 9,
#annotation_row    = annot_batch,
# cols
cluster_cols      = FALSE,#mat_cluster_cols,
#treeheight_col    = 25,
#cutree_cols       = 4,
show_colnames     = TRUE,
labels_col        = labels_sample$sample[mat_cluster_cols$order],
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation        = ann_labels,
annotation_colors = ann_colors,
legend_breaks     = c(bot, bot+(1-bot)/2, 1),
# tiles
color             = scico(255, palette='bamako'),
border_color      = NA,
#display_numbers   = TRUE,
#fontsize_number   = 5,
#number_color      = 'white',
# save plot
#filename          = 'RNAseq_sample_corr.png',
#width             = 8,
#height            = 6
)
hm
ann_colors
ann_levels
ann_labels
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
# data
library(tibble)
library(stringr)
library(purrr)         # map
library(DescTools)     # outside operator
library(dplyr)         # filter
# library(genefilter)
# graphics
library(ggplot2)
library(ggthemes)       # italics in the figures
library(ggtext)         # italics in the figures
library(pheatmap)       # pretty heatmap
library(dendsort)       # to sort dendrograms
library(scico)          # scientific colormaps
library(ggrepel)        # to avoid overlapping text
library(cetcolor)       # Peter Kovesi's perceptually uniform colour maps
# convenience
library(here);
setwd(here())
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# add column to distinguish control batches
targets$sample_type <- targets$Condition
targets$sample_type[targets$sample_type=='Control'] <- str_c(
targets$Condition, "_", targets$Batch)[targets$Condition=='Control']
targets[,c('Condition', 'sampleIDs', 'sample_type')]
# TPM counts
tpmNormalisedCounts <- readRDS('output/tpmNormalisedCounts.RDS')
# pseudocounts
vsd_bcorr <- readRDS('output/vst_pseudocounts_batchCorrected.RDS')
# DEG lists
data_list <- list.files("output", pattern = "_vs_")
datasets <- pmap(list(file = paste("output", data_list, sep = "/")),
readRDS)
names(datasets) <- str_split_fixed(
str_split_fixed(data_list, ".RDS", n=2)[,1],
"_", n=3)[,3]
# Filter for DEG with abs(log2FC) >= `fc_thresh`
fc_thresh <- 3
DE_genes <- datasets %>%
map( filter, padj <= 0.05 ) %>%
map( filter, log2FoldChange %][% c(-fc_thresh, fc_thresh) )
# get the union of DEGs sets
DE_unique_genes <- unique(unlist(lapply(DE_genes, '[[', "ensemblGeneID")))
length(DE_unique_genes)
# make rownames a column to filter by DEGs
tpmNormalisedCounts$EnsemblGeneID <- rownames(tpmNormalisedCounts)
DE_tpm <- tpmNormalisedCounts[match(DE_unique_genes, tpmNormalisedCounts$EnsemblGeneID),]
DE_tpm <- subset(DE_tpm, select = -EnsemblGeneID) # removes rownames column
main.title <-  'Clustered heatmap of DEGs'
# annotation labels
## for batch
annot_batch <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
## for genotype
ann_labels <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
ann_labels$condition <- plyr::mapvalues(targets$Condition,
from=unique(targets$Condition),
to=c('da RNAi', 'da ov/ex',
'control', 'da:da ov/ex',
'scute ov/ex'))
ann_labels$condition <- factor(ann_labels$condition,
levels=c('da RNAi', 'control',
'da ov/ex', 'da:da ov/ex',
'scute ov/ex'))
rownames(annot_batch) <- targets$sampleIDs # same as `names(DE_tpm)`
# annotation colours
ann_colors = list(
batch = c('1' = RColorBrewer::brewer.pal(12, 'Paired')[2],
'2' = RColorBrewer::brewer.pal(12, 'Paired')[8]),
condition = c("da RNAi" = RColorBrewer::brewer.pal(12, 'Paired')[9],
"da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[5],
"control" = RColorBrewer::brewer.pal(12, 'Paired')[1],
"da:da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[6],
"scute ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[4])
)
hm <- pheatmap(
# data
mat               = DE_tpm[mat_cluster_rows$order, mat_cluster_cols$order], # manually ordered as in clusters
scale             = "row",   # z-scores the rows
# title
main              = main.title,
fontsize          = 14,
#annotation        = ann_labels,
annotation_col    = ann_labels,
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'correlation',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'correlation',
treeheight_col    = 25,
show_colnames     = TRUE,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
main.title <-  'Clustered heatmap of DEGs'
# annotation labels
## for batch
annot_batch <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
## for genotype
ann_labels <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
ann_labels$condition <- plyr::mapvalues(targets$Condition,
from=unique(targets$Condition),
to=c('da RNAi', 'da ov/ex',
'control', 'da:da ov/ex',
'scute ov/ex'))
ann_labels$condition <- factor(ann_labels$condition,
levels=c('da RNAi', 'control',
'da ov/ex', 'da:da ov/ex',
'scute ov/ex'))
rownames(annot_batch) <- targets$sampleIDs # same as `names(DE_tpm)`
# annotation colours
ann_colors = list(
batch = c('1' = RColorBrewer::brewer.pal(12, 'Paired')[2],
'2' = RColorBrewer::brewer.pal(12, 'Paired')[8]),
condition = c("da RNAi" = RColorBrewer::brewer.pal(12, 'Paired')[9],
"da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[5],
"control" = RColorBrewer::brewer.pal(12, 'Paired')[1],
"da:da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[6],
"scute ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[4])
)
hm <- pheatmap(
# data
mat               = DE_tpm[mat_cluster_rows$order, mat_cluster_cols$order], # manually ordered as in clusters
scale             = "row",   # z-scores the rows
# title
main              = main.title,
fontsize          = 14,
#annotation        = ann_labels,
annotation_col    = ann_labels,
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'correlation',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'correlation',
treeheight_col    = 25,
show_colnames     = TRUE,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
# data
library(tibble)
library(stringr)
library(purrr)         # map
library(DescTools)     # outside operator
library(dplyr)         # filter
# library(genefilter)
# graphics
library(ggplot2)
library(ggthemes)       # italics in the figures
library(ggtext)         # italics in the figures
library(pheatmap)       # pretty heatmap
library(dendsort)       # to sort dendrograms
library(scico)          # scientific colormaps
library(ggrepel)        # to avoid overlapping text
library(cetcolor)       # Peter Kovesi's perceptually uniform colour maps
# convenience
library(here);
setwd(here())
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# add column to distinguish control batches
targets$sample_type <- targets$Condition
targets$sample_type[targets$sample_type=='Control'] <- str_c(
targets$Condition, "_", targets$Batch)[targets$Condition=='Control']
targets[,c('Condition', 'sampleIDs', 'sample_type')]
# TPM counts
tpmNormalisedCounts <- readRDS('output/tpmNormalisedCounts.RDS')
# pseudocounts
vsd_bcorr <- readRDS('output/vst_pseudocounts_batchCorrected.RDS')
# DEG lists
data_list <- list.files("output", pattern = "_vs_")
datasets <- pmap(list(file = paste("output", data_list, sep = "/")),
readRDS)
names(datasets) <- str_split_fixed(
str_split_fixed(data_list, ".RDS", n=2)[,1],
"_", n=3)[,3]
# Filter for DEG with abs(log2FC) >= `fc_thresh`
fc_thresh <- 3
DE_genes <- datasets %>%
map( filter, padj <= 0.05 ) %>%
map( filter, log2FoldChange %][% c(-fc_thresh, fc_thresh) )
# get the union of DEGs sets
DE_unique_genes <- unique(unlist(lapply(DE_genes, '[[', "ensemblGeneID")))
length(DE_unique_genes)
# make rownames a column to filter by DEGs
tpmNormalisedCounts$EnsemblGeneID <- rownames(tpmNormalisedCounts)
DE_tpm <- tpmNormalisedCounts[match(DE_unique_genes, tpmNormalisedCounts$EnsemblGeneID),]
DE_tpm <- subset(DE_tpm, select = -EnsemblGeneID) # removes rownames column
main.title <-  'Clustered heatmap of DEGs'
# annotation labels
## for batch
annot_batch <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
## for genotype
ann_labels <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
ann_labels$condition <- plyr::mapvalues(targets$Condition,
from=unique(targets$Condition),
to=c('da RNAi', 'da ov/ex',
'control', 'da:da ov/ex',
'scute ov/ex'))
ann_labels$condition <- factor(ann_labels$condition,
levels=c('da RNAi', 'control',
'da ov/ex', 'da:da ov/ex',
'scute ov/ex'))
rownames(annot_batch) <- targets$sampleIDs # same as `names(DE_tpm)`
# annotation colours
ann_colors = list(
batch = c('1' = RColorBrewer::brewer.pal(12, 'Paired')[2],
'2' = RColorBrewer::brewer.pal(12, 'Paired')[8]),
condition = c("da RNAi" = RColorBrewer::brewer.pal(12, 'Paired')[9],
"da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[5],
"control" = RColorBrewer::brewer.pal(12, 'Paired')[1],
"da:da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[6],
"scute ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[4])
)
colors()
col2hex(cname)
library(gplot)
install.packages('gplot')
colors()
str(colors())
install.packages('gplots')
library(gplots)
col2hex('yellow')
col2hex('paleyellow')
col2rgb
rgb(255,255,255)
rgb(0.1,0.1,0.1)
rgb(col2rgb('yellow'))
col2rgb('yellow')
list(col2rgb('yellow'))
unlist(col2rgb('yellow'))
class(col2rgb('yellow'))
as.list(col2rgb('yellow')
)
list(col2rgb('yellow'))
as.list(col2rgb('yellow'))
rgb(as.list(col2rgb('yellow')))
rgb(as.vector(col2rgb('yellow')))
as.vector(col2rgb('yellow'))
do.call(rgb, as.list(col2rgb('yellow')))
do.call(rgb, as.list(col2rgb('yellow')/255))
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
# data
library(tibble)
library(stringr)
library(purrr)         # map
library(DescTools)     # outside operator
library(dplyr)         # filter
# library(genefilter)
# graphics
library(ggplot2)
library(ggthemes)       # italics in the figures
library(ggtext)         # italics in the figures
library(pheatmap)       # pretty heatmap
library(dendsort)       # to sort dendrograms
library(scico)          # scientific colormaps
library(ggrepel)        # to avoid overlapping text
library(cetcolor)       # Peter Kovesi's perceptually uniform colour maps
# convenience
library(here);
setwd(here())
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# add column to distinguish control batches
targets$sample_type <- targets$Condition
targets$sample_type[targets$sample_type=='Control'] <- str_c(
targets$Condition, "_", targets$Batch)[targets$Condition=='Control']
targets[,c('Condition', 'sampleIDs', 'sample_type')]
# TPM counts
tpmNormalisedCounts <- readRDS('output/tpmNormalisedCounts.RDS')
# pseudocounts
vsd_bcorr <- readRDS('output/vst_pseudocounts_batchCorrected.RDS')
# DEG lists
data_list <- list.files("output", pattern = "_vs_")
datasets <- pmap(list(file = paste("output", data_list, sep = "/")),
readRDS)
names(datasets) <- str_split_fixed(
str_split_fixed(data_list, ".RDS", n=2)[,1],
"_", n=3)[,3]
# Filter for DEG with abs(log2FC) >= `fc_thresh`
fc_thresh <- 3
DE_genes <- datasets %>%
map( filter, padj <= 0.05 ) %>%
map( filter, log2FoldChange %][% c(-fc_thresh, fc_thresh) )
# get the union of DEGs sets
DE_unique_genes <- unique(unlist(lapply(DE_genes, '[[', "ensemblGeneID")))
length(DE_unique_genes)
# make rownames a column to filter by DEGs
tpmNormalisedCounts$EnsemblGeneID <- rownames(tpmNormalisedCounts)
DE_tpm <- tpmNormalisedCounts[match(DE_unique_genes, tpmNormalisedCounts$EnsemblGeneID),]
DE_tpm <- subset(DE_tpm, select = -EnsemblGeneID) # removes rownames column
main.title <-  'Clustered heatmap of DEGs'
# annotation labels
## for batch
annot_batch <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
## for genotype
ann_labels <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
ann_labels$condition <- plyr::mapvalues(targets$Condition,
from=unique(targets$Condition),
to=c('da RNAi', 'da ov/ex',
'control', 'da:da ov/ex',
'scute ov/ex'))
ann_labels$condition <- factor(ann_labels$condition,
levels=c('da RNAi', 'control',
'da ov/ex', 'da:da ov/ex',
'scute ov/ex'))
rownames(annot_batch) <- targets$sampleIDs # same as `names(DE_tpm)`
# annotation colours
ann_colors = list(
batch = c('1' = RColorBrewer::brewer.pal(12, 'Paired')[2],
'2' = RColorBrewer::brewer.pal(12, 'Paired')[8]),
condition = c("da RNAi" = RColorBrewer::brewer.pal(12, 'Paired')[9],
"da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[5],
"control" = RColorBrewer::brewer.pal(12, 'Paired')[1],
"da:da ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[6],
"scute ov/ex" = RColorBrewer::brewer.pal(12, 'Paired')[4])
)
hm <- pheatmap(
# data
mat               = DE_tpm[mat_cluster_rows$order, mat_cluster_cols$order], # manually ordered as in clusters
scale             = "row",   # z-scores the rows
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
#annotation        = ann_labels,
annotation_col    = dplyr::select(ann_labels, condition),
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'correlation',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'correlation',
treeheight_col    = 25,
show_colnames     = TRUE,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
hm <- pheatmap(
# data
mat               = DE_tpm,
scale             = "row",   # z-scores the rows
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
#annotation        = ann_labels,
annotation_col    = dplyr::select(ann_labels, condition),
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'correlation',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'correlation',
treeheight_col    = 25,
show_colnames     = TRUE,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
hm <- pheatmap(
# data
mat               = DE_tpm,
scale             = "row",   # z-scores the rows
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
#annotation        = ann_labels,
annotation    = dplyr::select(ann_labels, condition),
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'correlation',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'correlation',
treeheight_col    = 25,
show_colnames     = TRUE,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# legends
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
