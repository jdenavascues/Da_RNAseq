maxGSSize = 5000,
eps = 0,
pvalueCutoff = 1,
pAdjustMethod = "BH",
TERM2NAME = NA,
verbose = TRUE,
seed = FALSE,
by = "fgsea"
)
# da knockdown
rank <- make_degrank(DaKD_deg, mode='log2fc', key='ensemblGeneID')
daKD_gse_glad <- do.call(
GSEA, c(list(geneList=rank, nPermSimple = 1000, TERM2GENE = glad_gmx), GSEAparams)
)
# da overexpression
rank <- make_degrank(DaOE_deg, mode='log2fc', key='ensemblGeneID')
daOE_gse_glad <- do.call(
GSEA, c(list(geneList=rank, nPermSimple = 1000, TERM2GENE = glad_gmx), GSEAparams)
)
# da:da overexpression
rank <- make_degrank(DaDaOE_deg, mode='log2fc', key='ensemblGeneID')
dadaOE_gse_glad <- do.call(
GSEA, c(list(geneList=rank, nPermSimple = 1000, TERM2GENE = glad_gmx), GSEAparams)
)
# scute overexpression
rank <- make_degrank(ScOE_deg, mode='log2fc', key='ensemblGeneID')
scOE_gse_glad <- do.call(
GSEA, c(list(geneList=rank, nPermSimple = 1000000, TERM2GENE = glad_gmx), GSEAparams)
)
saveRDS(scOE_gse_glad, 'output/scOE_gse_glad.RDS')
# scOE_gse_glad <- readRDS('output/scOE_gse_glad.RDS')
gse_list <- list(scOE_gse_glad, dadaOE_gse_glad, daOE_gse_glad, daKD_gse_glad)
# `conditions` were defined further above
sets.as.factors <- unique(glad_gmx$term)
NES.df <- gseCP_summarise(glad_gmx, gse_list, conditions, sets.as.factors, 'NES', cluster = TRUE)
padj.df <- gseCP_summarise(glad_gmx, gse_list, conditions, sets.as.factors, 'p.adjust')
subt <- "for Gene List Annotation for Drosophila gene sets (Hu et al., 2015)"
p <- layer.heatmap(NES.df, padj.df, subt)
p + geom_hline(aes(yintercept=3.5), linewidth = 0.5) +
theme(plot.margin = margin(r = 100))
subglad_gsea <- function(deg, gmx, perms=1000) {
g <- lapply(
gmx, \(x) do.call(
GSEA,
c(list(geneList=make_degrank(deg, mode='log2fc', key='ensemblGeneID'),
nPermSimple = perms,
TERM2GENE = x),
GSEAparams)
)
)
names(g) <- names(gmx)
return(g)
}
daKD_gse_gladsub   <- subglad_gsea(DaKD_deg, glad_sub_gmx)
library(clusterProfiler)
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
kk <- enrichKEGG(gene         = gene,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk)
library(clusterProfiler)
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
kk <- enrichKEGG(gene         = gene,
organism     = 'hsa',
pvalueCutoff = 0.05)
head(kk)
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
geneList
gene
knitr::opts_chunk$set(dev = 'png',
fig.align = 'center', fig.height = 7, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset="dmelanogaster_gene_ensembl",
host = "https://oct2022.archive.ensembl.org")
library(biomaRt)
library(clusterProfiler)
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset="dmelanogaster_gene_ensembl",
host = "https://oct2022.archive.ensembl.org")
attributes <- listAttributes(ensembl)
ezlist <- getBM(attributes=c('entrezgene_id', 'flybase_gene_id', 'ensembl_gene_id', 'external_gene_name'), mart = ensembl)
kegconv <- read.csv('https://rest.kegg.jp/conv/ncbi-geneid/dme/', sep = '\t', header = FALSE)
library(tidyverse)
kegconv <- kegconv %>%
rename(dme = V1, geneid = V2) %>%
mutate(dme = str_replace(dme, "dme:", ""),
geneid = str_replace(geneid, "ncbi-geneid:", ""))
geneIDs <- ezlist %>%
filter(external_gene_name %in% daKD_dn$gene_symbol) %>%
dplyr::select(entrezgene_id) %>% unlist()
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = 'png',
fig.align = 'center', fig.height = 7, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(
# data manip.
dplyr, tidyr, stringr, org.Dm.eg.db, DOSE, fgsea, clusterProfiler, purrr, biomaRt,
# plotting
pathview,  cetcolor, enrichplot, genekitr, ggh4x, ggtheme, ggtext, ggrepel, ggnewscale, patchwork,
# convenience
here)
if (Sys.getenv("USER")=="JQ") {
setwd("/Users/JQ/Documents/_CODE REPOS/GitHub/Da_RNAseq")
} else if (Sys.getenv("RSTUDIO")==1) {
setwd( dirname(rstudioapi::getSourceEditorContext(id = NULL)$path) ) # gets what is in the editor
} else {
setwd(here::here())
d <- str_split(getwd(),'/')[[1]][length(str_split(getwd(),'/')[[1]])]
if (d != 'Da_RNAseq') { stop(
paste0("Could not set working directory automatically to where this",
" script resides.\nPlease do `setwd()` manually"))
}
}
getwd()
figdir <- paste0(c(head(str_split(getwd(),'/')[[1]],-1),
paste0(tail(str_split(getwd(),'/')[[1]],1), '_figures')),
collapse='/')
dir.create(figdir, showWarnings = FALSE)
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# DEG data
DaKD_deg <- readRDS('output/Control_vs_DaKD.RDS')
DaOE_deg <- readRDS('output/Control_vs_DaOE.RDS')
DaDaOE_deg <- readRDS('output/Control_vs_DaDaOE.RDS')
ScOE_deg <- readRDS('output/Control_vs_ScOE.RDS')
head(
ScOE_deg %>% dplyr::select(gene_symbol, ensemblGeneID, baseMean, log2FoldChange, padj),
1
)
make_degset <- function(deg, up, fc_thresh) {
converter <- ifelse(up,1,-1)
degset <- deg %>%
filter(padj<0.05) %>%
filter(abs(log2FoldChange) > fc_thresh) %>%
filter(log2FoldChange*converter > 0)
return(degset)
}
make_degrank <- function(deg, mode='log2fc', key='gene_symbol') {
if (!(key %in% c('gene_symbol', 'ensemblGeneID'))) {
stop("The `key` parameter needs to be one of 'gene_symbol', 'ensemblGeneID'")
}
# mode: whether to use padj or log2FC
if (mode=='log2fc') {
deg_sorted <- deg %>% arrange(desc(log2FoldChange))
degrank <- deg_sorted$log2FoldChange
names(degrank) <- deg_sorted[,key]
} else if (mode=='padj') {
deg$p.rank <- sign(deg$log2FoldChange) * -log10(deg$padj)
deg_sorted <- deg %>% arrange(desc(p.rank))
degrank <- deg_sorted$p.rank
names(degrank) <- deg_sorted[,key]
} else {
stop('the `mode` parameter can only be either `log2fc` or `padj`')
}
return(degrank)
}
# using `clusterProfiler` and `enrichplot`
# select reg set
daKD_up <- make_degset(DaKD_deg, up=TRUE, fc_thresh=1.5)
# ORA
daKD_up_eGO <- enrichGO(gene         = daKD_up$gene_symbol,
OrgDb         = org.Dm.eg.db,
keyType       = 'SYMBOL',
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
# with down genes
daKD_dn <- make_degset(DaKD_deg, up=FALSE, fc_thresh=1.5)
daKD_dn_eGO <- enrichGO(gene         = daKD_dn$gene_symbol,
OrgDb         = org.Dm.eg.db,
keyType       = 'SYMBOL',
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.05)
geneIDs <- ezlist %>%
filter(external_gene_name %in% daKD_dn$gene_symbol) %>%
dplyr::select(entrezgene_id) %>% unlist()
geneList <- kegconv %>%
filter(geneid %in% geneIDs) %>%
dplyr::select(dme) %>% as.vector()
kg <- enrichKEGG(gene         = geneList,
organism     = 'dme',
pvalueCutoff = 0.05)
head(kg)
geneIDs
head(daKD_dn)
dummy <- head(daKD_dn) %>% dplyr::select(gene_symbol, ensemblGeneID, log2FoldChange)
dummy <- head(daKD_dn) %>% dplyr::select(c(gene_symbol, ensemblGeneID, log2FoldChange))
dummy
dummy$gene_symbol
dummy$ensemblGeneID
dummy$log2FoldChange
df <- data.frame(gene_symbol = c("nAChRalpha2" "Act42A", "Ama", "ase", "asp", "Col4a1"),
df <- data.frame(gene_symbol = c("nAChRalpha2", "Act42A", "Ama", "ase", "asp", "Col4a1"),
ensemblGeneID = c("FBgn0000039", "FBgn0000043", "FBgn0000071", "FBgn0000137", "FBgn0000140" "FBgn0000299"),
df <- data.frame(gene_symbol = c("nAChRalpha2", "Act42A", "Ama", "ase", "asp", "Col4a1"),
ensemblGeneID = c("FBgn0000039", "FBgn0000043", "FBgn0000071", "FBgn0000137", "FBgn0000140" "FBgn0000299"),
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset="dmelanogaster_gene_ensembl",
host = "https://oct2022.archive.ensembl.org")
attributes <- listAttributes(ensembl)
ezlist <- getBM(attributes=c('entrezgene_id', 'ensembl_gene_id', 'external_gene_name'), mart = ensembl)
ezlist
ezlist %>% filter(ensembl_gene_id %in% df$gene_symbol)
ezlist %>% filter(., ensembl_gene_id %in% df$gene_symbol)
ezlist %>% filter(., ensembl_gene_id %in% df$ensembl_gene_id)
df$ensembl_gene_id
df
df <- data.frame(gene_symbol = c("nAChRalpha2", "Act42A", "Ama", "ase", "asp", "Col4a1"),
ensemblGeneID = c("FBgn0000039", "FBgn0000043", "FBgn0000071",
"FBgn0000137", "FBgn0000140", "FBgn0000299"),
log2FoldChange = c(-2.235647, -1.672559, -2.975020, -3.340225, -1.915317, -4.276045))
ezlist %>% filter(., ensembl_gene_id %in% df$ensembl_gene_id)
ezlist %>% filter(., ensembl_gene_id %in% df$ensemblGeneID)
df
which(ensembl_gene_id %in% df$ensembl_gene_id)
which(ezlist$ensembl_gene_id %in% df$ensembl_gene_id)
ezlist$ensembl_gene_id
typeof(ezlist$ensembl_gene_id)
is.list(ezlist$ensembl_gene_id)
is.vector(ezlist$ensembl_gene_id)
ezlist$ensembl_gene_id[[2]]
which(df$ensembl_gene_id %in% ezlist$ensembl_gene_id)
df$ensembl_gene_id
df$ensemblGeneID
which(df$ensemblGeneID %in% ezlist$ensembl_gene_id)
which(ezlist$ensembl_gene_id %in% df$ensemblGeneID)
ezlist %>%
filter(which(ezlist$ensembl_gene_id %in% df$ensemblGeneID))
ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID)
ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id)
df$`ncbi-geneid` <- ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id)
df
df$`ncbi-geneid` <- ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id) %>% as.vector()
df
df$`ncbi-geneid` <- ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id) %>% unlist()
df
kg <- enrichKEGG(gene         = df$`ncbi-geneid`,
organism     = 'dme',
pvalueCutoff = 0.05)
df$`ncbi-geneid`
as.character(df$`ncbi-geneid`)
kg <- enrichKEGG(gene         = as.character(df$`ncbi-geneid`),
organism     = 'dme',
pvalueCutoff = 0.05)
kg <- enrichKEGG(gene         = as.character(unlist(df$`ncbi-geneid`)),
organism     = 'dme',
pvalueCutoff = 0.05)
unlist(as.character(df$`ncbi-geneid`))
length(unlist(as.character(df$`ncbi-geneid`)))
as.vector(as.character(df$`ncbi-geneid`)))
as.vector(as.character(df$`ncbi-geneid`))
kg <- enrichKEGG(gene         = as.vector(as.character(df$`ncbi-geneid`)),
organism     = 'dme',
pvalueCutoff = 0.05)
df <- data.frame(gene_symbol = c("nAChRalpha2", "Act42A", "Ama", "ase", "asp", "Col4a1"),
ensemblGeneID = c("FBgn0000039", "FBgn0000043", "FBgn0000071",
"FBgn0000137", "FBgn0000140", "FBgn0000299"),
log2FoldChange = c(-2.235647, -1.672559, -2.975020, -3.340225, -1.915317, -4.276045))
ensembl <- useEnsembl(biomart = "ENSEMBL_MART_ENSEMBL",
dataset="dmelanogaster_gene_ensembl",
host = "https://oct2022.archive.ensembl.org")
attributes <- listAttributes(ensembl)
ezlist <- getBM(attributes=c('entrezgene_id', 'ensembl_gene_id', 'external_gene_name'), mart = ensembl)
df$`ncbi-geneid` <- ezlist %>%
filter(ezlist$ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id) %>% unlist()
kg <- enrichKEGG(gene         = as.vector(as.character(df$`ncbi-geneid`)),
organism     = 'dme',
pvalueCutoff = 0.05)
kegconv <- read.csv('https://rest.kegg.jp/conv/ncbi-geneid/dme/', sep = '\t', header = FALSE)
kegconv
kegconv <- kegconv %>%
rename(dme = V1, geneid = V2) %>%
mutate(dme = str_replace(dme, "dme:", ""),
geneid = str_replace(geneid, "ncbi-geneid:", ""))
kegconv <- read.csv('https://rest.kegg.jp/conv/ncbi-geneid/dme/', sep = '\t', header = FALSE)
head(kegconv)
kegconv <- kegconv %>%
rename(dme = V1, geneid = V2) %>%
mutate(dme = str_replace(dme, "dme:", ""),
geneid = str_replace(geneid, "ncbi-geneid:", ""))
library(tidyverse)
kegconv <- kegconv %>%
rename(dme = V1, geneid = V2) %>%
mutate(dme = str_replace(dme, "dme:", ""),
geneid = str_replace(geneid, "ncbi-geneid:", ""))
kegconv <- kegconv %>%
dplyr::rename(dme = V1, geneid = V2) %>%
mutate(dme = str_replace(dme, "dme:", ""),
geneid = str_replace(geneid, "ncbi-geneid:", ""))
head(kegconv)
df$`ncbi-geneid` <- ezlist %>%
filter(ensembl_gene_id %in% df$ensemblGeneID) %>%
dplyr::select(entrezgene_id) %>% unlist()
df
head(kegconv)
df$`kegg` <- kegconv %>%
filter(geneid %in% df$`ncbi-geneid`) %>%
dplyr::select(dme) %>% unlist()
df
as.vector(as.character(df$`kegg`))
df$`kegg`
length(df$`kegg`)
is.list(df$`kegg`)
is.vector(df$`kegg`)
is.vector(df$`ncbi-geneid`)
is.vector(as.character(df$`ncbi-geneid`))
kg <- enrichKEGG(gene         = as.list(as.character(df$`ncbi-geneid`)),
organism     = 'dme',
pvalueCutoff = 0.05)
kg <- enrichKEGG(gene         = as.character(df$`ncbi-geneid`),
organism     = 'dme',
pvalueCutoff = 0.05)
kg2 <- enrichKEGG(gene         = df$kegg,
organism     = 'dme',
pvalueCutoff = 0.05)
kg2 <- enrichKEGG(gene         = list(df$kegg),
organism     = 'dme',
pvalueCutoff = 0.05)
list(df$kegg),
list(df$kegg)
as.list(df$kegg)
library("pathview")
data(paths.dme)
geneList
View(make_degrank)
library("pathview")
hsa04110 <- pathview(gene.data  = make_degrank(DaKD_deg, mode='log2fc'),
pathway.id = "dme_M00892",
species    = "dme",
limit      = list(gene=max(abs(geneList)), cpd=1))
library("pathview")
rk <- make_degrank(DaKD_deg, mode='log2fc')
hsa04110 <- pathview(gene.data  = rk,
pathway.id = "dme_M00892",
species    = "dme",
limit      = list(gene=max(abs(rk)), cpd=1))
rk
data(korg)
head(korg)
korg %>% filter(kegg.code=='dme')
is.data.frame(korg)
typeof(korg)
class(korg)
korg[,kegg.code=='dme']
korg[,korg$kegg.code=='dme']
korg[, korg[kegg.code]=='dme']
head(korg)
korg[,'kegg.code']
korg['kegg.code']
korg[, korg[,'kegg.code']=='dme'
]
korg[,'kegg.code']=='dme'
korg[ korg[,'kegg.code']=='dme', ]
kr
rk
names(rk)
dfrk <- data.frame(gene_symbol=names(rk))
dfrk
(ezlist$external_gene_name %>% in dfrk$gene_symbol)
(ezlist$external_gene_name %in% dfrk$gene_symbol)
which(ezlist$external_gene_name %in% dfrk$gene_symbol)
tail(which(ezlist$external_gene_name %in% dfrk$gene_symbol))
which(dfrk$gene_symbol %in% ezlist$external_gene_name)
names(rk)
which(dfrk$gene_symbol %in% ezlist$external_gene_name, arr.ind=t)
which(ezlist$external_gene_name %in% dfrk$gene_symbol)
diff(which(ezlist$external_gene_name %in% dfrk$gene_symbol))
diff(which(ezlist$external_gene_name %in% dfrk$gene_symbol))<0
any(diff(which(ezlist$external_gene_name %in% dfrk$gene_symbol))<0)
(which(ezlist$external_gene_name %in% dfrk$gene_symbol)
which(ezlist$external_gene_name %in% dfrk$gene_symbol)
rk
tail(rk)
match(ezlist$external_gene_name %in% dfrk$gene_symbol)
match(ezlist$external_gene_name, dfrk$gene_symbol)
match(dfrk$gene_symbol, ezlist$external_gene_name)
dfrk %>% filter(gene_symbol, match(ezlist$external_gene_name))
names(ezlist)
dfrk$geneid <- ezlist[match(dfrk$gene_symbol, ezlist$external_gene_name), 'entrezgene_id']
dfrk
head(dfrk)
head(kegconv)
View(ezlist)
dfrk$keg <- kegconv[match(dfrk$geneid, kegconv$geneid), 'dme']
head(dfrk)
head(na.omit(dfrk))
names(rk) <- dfrk$keg
which(dfrk$keg==NA)
head(dfrk)
dfrk$keg[[3]]
is.na(dfrk$keg[[3]])
which(dfrk$keg==NA)
which(dfrk$keg==<NA>)
is.na(dfrk$keg)
rk[is.na(dfrk$keg)] <- NULL
rk[is.na(dfrk$keg),] <- NULL
rk[is.na(dfrk$keg)]
class(rk)
typeof(rk)
attributes(rk)
attributes(rk)$names
mode(rk)
is.vector(rk)
rk[-is.na(dfrk$keg)]
typeof(c(1,2))
class(c(1,2))
is.vector(c(1,2))
is.vector(is.na(dfrk$keg))
rk[-which(is.na(dfrk$keg))]
rk <- rk[-which(is.na(dfrk$keg))]
hsa04110 <- pathview(gene.data  = rk,
pathway.id = "dme_M00892",
species    = "dme",
limit      = list(gene=max(abs(rk)), cpd=1))
dme_M00892 <- pathview(gene.data  = rk,
pathway.id = "dme_00892",
species    = "dme",
limit      = list(gene=max(abs(rk)), cpd=1))
library(gage)
install.packages('gage', 'gageData')
install.packages('gage')
librarian::shelf(gage)
library(gage)
library(gageData)
install.packages('gageData)
install.packages('gageData')
librarian::shelf('gageData')
library(gageData)
data(kegg.sets.dm)
data(kegg.sets.dme)
data(kegg.sets)
data(kegg.sets.hs)
kegg.gsets
remove.packages('gage')
remove.packages('gageData')
library("pathview")
rk <- make_degrank(DaKD_deg, mode='log2fc')
dfrk <- data.frame(gene_symbol=names(rk))
dfrk$geneid <- ezlist[match(dfrk$gene_symbol, ezlist$external_gene_name), 'entrezgene_id']
dfrk$keg <- kegconv[match(dfrk$geneid, kegconv$geneid), 'dme']
names(rk) <- dfrk$keg
rk <- rk[-which(is.na(dfrk$keg))]
dme_M00892 <- pathview(gene.data  = rk,
pathway.id = "dme00520",
species    = "dme",
limit      = list(gene=max(abs(rk)), cpd=1))
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = "hsa04110",
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
geneList
data(geneList, package="DOSE")
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = "hsa04110",
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
geneList
rk <- make_degrank(DaKD_deg, mode='log2fc')
dfrk <- data.frame(gene_symbol=names(rk))
dfrk$geneid <- ezlist[match(dfrk$gene_symbol, ezlist$external_gene_name), 'entrezgene_id']
library("pathview")
rk <- make_degrank(DaKD_deg, mode='log2fc')
dfrk <- data.frame(gene_symbol=names(rk))
dfrk$geneid <- ezlist[match(dfrk$gene_symbol, ezlist$external_gene_name), 'entrezgene_id']
#dfrk$keg <- kegconv[match(dfrk$geneid, kegconv$geneid), 'dme']
#names(rk) <- dfrk$keg
#rk <- rk[-which(is.na(dfrk$keg))]
names(rk) <- dfrk$geneid
dme_M00892 <- pathview(gene.data  = rk,
pathway.id = "dme00520",
species    = "dme",
limit      = list(gene=max(abs(rk)), cpd=1))
install.packages('EnrichmentBrowser')
librarian::shelf('EnrichmentBrowser')
kegg.gs <- getGenesets(org = "dme", db = "kegg")
library(EnrichmentBrowser)
kegg.gs <- getGenesets(org = "dme", db = "kegg")
kegg.gs
kegg.gs$dme01100_Metabolic_pathways
kegg.gsets()
library(gage)
kegg.gsets(species='dme', id.type='entrez')
install.packages('gage')
install.packages("gage")
librarian::shelf("gage")
kegg.gsets('dme', 'entrez')
kg.gs <- kegg.gsets(species='dme', id.type='entrez')
length(kg.gs)
kg.gs$kg.sets
length(kg.gs$kg.sets)
