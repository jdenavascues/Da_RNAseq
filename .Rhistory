if (!identical(rownames(rawCounts), rownames(normalisedCounts))) {
stop()
}
if (!identical(rownames(tpmNormalisedCounts), rownames(normalisedCounts))) {
stop()
}
# test that there is information for all of them (e.g. no mismatch between the GTF files used)
cat(
cat('There are\t',nrow(rawCounts),
'\tgenes listed in `rawCounts`, and there are data for\t\t',
nrow(na.omit(rawCounts)), '\tof them.\n'),
cat('There are\t',nrow(normalisedCounts),
'\tgenes listed in `normalisedCounts`, and there are data for\t',
nrow(na.omit(normalisedCounts)), '\tof them.\n'),
cat('There are\t',nrow(tpmNormalisedCounts),
'\tgenes listed in `tpmNormalisedCounts`, and there are data for\t',
nrow(na.omit(tpmNormalisedCounts)), '\tof them.\n')
)
# for downstream use
saveRDS(rawCounts, 'output/rawCounts.RDS')
saveRDS(normalisedCounts, 'output/normalisedCounts.RDS')
saveRDS(tpmNormalisedCounts, 'output/tpmNormalisedCounts.RDS')
# to get a more informative naming for the samples:
targets$sampleIDs <- names(rawCounts)
# conditions to be tested
test_conditions <- unique( targets[targets$Condition != 'Control',]$Condition )
test_names <- paste0(rep('Control_vs_',length(test_conditions)),test_conditions)
tests <- as.list(rep(NA, length(test_names)))
names(tests) <- test_names
for (condtn in test_conditions) {
# get the Counts for those conditions
deData <- as.data.frame(results(analysisObject,
contrast=c("condition", 'Control', condtn),
pAdjustMethod="BH"))
# add column of ID
deData <- cbind(data.frame('ensemblGeneID'=rownames(deData)), deData)
# sort by pval
deData <- deData[order(deData$pvalue), ]
# add gene symbol column and reorder columns
deData <- merge(deData, dlist, by=0)
deData <- deData[,c(1,ncol(deData),2:(ncol(deData)-1))]
# save for later
saveRDS(deData, file=paste0("output/", 'Control_vs_', condtn, ".RDS"))
# save as Supplementary data for publication
tests[[paste0('Control_vs_', condtn)]] <- deData
}
# add `rawCounts` to `tests`
tests <- rlist::list.append(tests, `Raw counts per gene per sample`=rawCounts)
# Supplementary data for publication
write_xlsx(tests, path='output/Table S3.xlsx')
targets$condition_md <- plyr::mapvalues(
targets$Condition,
from=unique(targets$Condition),
to=c('*da^RNAi^*', '*da^OVEX^*', '*wild-type*', '*da:da^OVEX^*', '*scute^OVEX^*')
)
targets$condition_md <- factor(
targets$condition_md,
c('*wild-type*', '*da^OVEX^*', '*da:da^OVEX^*','*da^RNAi^*', '*scute^OVEX^*')
)
saveRDS(targets, 'output/targets.RDS')
ggsave('PCA_vsd_bcorr.pdf', plot = last_plot(), device = 'pdf',
path = figdir, dpi = 300)
ggsave('PCA_vsd_bcorr.svg', plot = last_plot(), device = 'svg',
path = figdir, dpi = 300)
ggsave('PCA_vsd_bcorr.png', plot = last_plot(), device = png,
path = figdir, dpi = 300)
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(tibble, stringr, purrr, dplyr, plyr, DescTools, limma)
# graphics
librarian::shelf(RColorBrewer, pheatmap, cetcolor)
# convenience
library(here); setwd(here())
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(tibble, stringr, purrr, dplyr, plyr, DescTools, limma)
# graphics
librarian::shelf(RColorBrewer, pheatmap, cetcolor)
# convenience
library(here); setwd(here())
here()
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(tibble, stringr, purrr, dplyr, plyr, DescTools, limma)
# graphics
librarian::shelf(RColorBrewer, pheatmap, cetcolor)
# convenience
library(here)
setwd(here())
here
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(tibble, stringr, purrr, dplyr, plyr, DescTools, limma)
# graphics
librarian::shelf(RColorBrewer, pheatmap, cetcolor)
# convenience
library(here); setwd(here::here())
plyr::here()
plyr::here
ggplot2::theme_set(ggpubr::theme_pubr(base_size=10))
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(tibble, stringr, purrr, dplyr, plyr, DescTools, limma)
# graphics
librarian::shelf(RColorBrewer, pheatmap, cetcolor)
# convenience
library(here)
setwd(here::here()) # to distinguish from plyr::here()
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# add column to distinguish control batches
targets$sample_type <- targets$Condition
targets$sample_type[targets$sample_type=='Control'] <- str_c(
targets$Condition, "_", targets$Batch)[targets$Condition=='Control']
targets[,c('Condition', 'sampleIDs', 'sample_type')]
# TPM counts
tpmNormalisedCounts <- readRDS('output/tpmNormalisedCounts.RDS')
# pseudocounts
vsd_bcorr <- readRDS('output/vst_pseudocounts_batchCorrected.RDS')
# DEG lists
data_list <- list.files("output", pattern = "_vs_")
datasets <- pmap(list(file = paste("output", data_list, sep = "/")),
readRDS)
names(datasets) <- str_split_fixed(
str_split_fixed(data_list, ".RDS", n=2)[,1],
"_", n=3)[,3]
# Filter for DEG with abs(log2FC) >= `fc_thresh`
fc_thresh <- 2.5
DE_genes <- datasets %>%
map( filter, padj <= 0.05 ) %>%
map( filter, log2FoldChange %][% c(-fc_thresh, fc_thresh) )
# get the union of DEGs sets
DE_unique_genes <- unique(unlist(lapply(DE_genes, '[[', "ensemblGeneID")))
length(DE_unique_genes)
# filter by DEGs
DE_tpm <- tpmNormalisedCounts[match(DE_unique_genes,
rownames(tpmNormalisedCounts)),]
main.title <-  'Clustered heatmap of DEGs'
# annotation labels
## for batch
ann_labels <- data.frame(batch = ifelse(test = targets$Batch == 'a',
yes = '1',
no =  '2'))
## for genotype
ann_labels$condition <- mapvalues(targets$Condition,
from=unique(targets$Condition),
to=c('da RNAi', 'da ov/ex',
'control', 'da:da ov/ex',
'scute ov/ex'))
ann_labels$condition <- factor(ann_labels$condition,
levels=c('da RNAi', 'control',
'da ov/ex', 'da:da ov/ex',
'scute ov/ex'))
rownames(ann_labels) <- targets$sampleIDs # same as `names(DE_tpm)`
# annotation colours
ann_colors = list(
batch = c('1' = brewer.pal(12, 'Paired')[2],
'2' = brewer.pal(12, 'Paired')[8]),
condition = c("da RNAi" = brewer.pal(12, 'Paired')[9],
"da ov/ex" = brewer.pal(12, 'Paired')[5],
"control" = brewer.pal(12, 'Paired')[1],
"da:da ov/ex" = brewer.pal(12, 'Paired')[6],
"scute ov/ex" = brewer.pal(12, 'Paired')[4])
)
hm <- pheatmap(
# data
mat               = DE_tpm,
scale             = "row",   # z-scores the rows
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'manhattan',
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'manhattan',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
vsd <- readRDS('output/vst_pseudocounts.RDS')
# min(tpmNormalisedCounts) is 0 so we need to add 1 for log transform
tpm_log_bcorr <- removeBatchEffect(
log2(tpmNormalisedCounts+1),
batch=vsd$batch,
design=model.matrix(~condition, colData(vsd) )
)
# reverse log transform
tpm_bcorr <- 2^tpm_log_bcorr
# filter by DEGs
DE_tpm_bcorr <- tpm_bcorr[match(DE_unique_genes,
rownames(tpm_bcorr)),]
hm <- pheatmap(
# data
mat               = DE_tpm_bcorr,
scale             = "row",   # z-scores the rows
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski',
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
vsd_bcorr <- readRDS('output/vst_pseudocounts_batchCorrected.RDS')
DE_vsd_bcorr <- as.data.frame(assay(vsd_bcorr)[match(DE_unique_genes,
rownames(vsd_bcorr)),])
hm <- pheatmap(
# data
mat               = DE_vsd_bcorr,
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'euclidean', # "euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski"
treeheight_row    = 25,      # default is 50
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'euclidean',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5
)
hm
DE_bcorr <- 2^DE_vsd_bcorr
hm <- pheatmap(
# data
mat               = DE_bcorr,
scale             = 'row',
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski', # "euclidean", "maximum", "manhattan", "canberra", "minkowski"
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5,
# save plot
filename          = paste0(figdir,'/Heatmap_vsd_bcorr.tiff'),
width             = 10,
height            = 12
)
hm
hm <- pheatmap(
# data
mat               = DE_bcorr,
scale             = 'row',
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski', # "euclidean", "maximum", "manhattan", "canberra", "minkowski"
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5,
# save plot
filename          = paste0(figdir,'/Heatmap_vsd_bcorr.pdf'),
width             = 10,
height            = 12
)
hm
hm <- pheatmap(
# data
mat               = DE_bcorr,
scale             = 'row',
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski', # "euclidean", "maximum", "manhattan", "canberra", "minkowski"
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5,
# save plot
filename          = paste0(figdir,'/Heatmap_vsd_bcorr.png'),
width             = 10,
height            = 12
)
hm
paste0(figdir,'/Heatmap_vsd_bcorr.png')
knitr::opts_chunk$set(dev = c('png', 'cairo_pdf'),
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(venneuler, dplyr, reshape2, biomaRt)
# graphics
librarian::shelf(UpSetR, VennDiagram)
# convenience
librarian::shelf(here)
setwd(here())
knitr::opts_chunk$set(dev = 'png',
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
hm <- pheatmap(
# data
mat               = DE_bcorr,
scale             = 'row',
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski', # "euclidean", "maximum", "manhattan", "canberra", "minkowski"
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5,
)
# save it
tiff(file=paste0(figdir,'/Heatmap_vsd_bcorr.tiff'),
width=10, height=12, units="in", res=300)
hm
dev.off()
pdf(file=paste0(figdir,'/Heatmap_vsd_bcorr.pdf'),
width=10, height=12, units="in", res=300)
hm <- pheatmap(
# data
mat               = DE_bcorr,
scale             = 'row',
# main
main              = main.title,
fontsize          = 14,
clustering_method = "ward.D2",
# rows
cluster_rows      = TRUE,
clustering_distance_rows = 'minkowski', # "euclidean", "maximum", "manhattan", "canberra", "minkowski"
treeheight_row    = 25,      # default is 50
cutree_rows       = 6,
show_rownames     = FALSE,
# cols
cluster_cols      = TRUE,
clustering_distance_cols = 'canberra',
treeheight_col    = 25,
labels_col        = targets$sample_type,
fontsize_col      = 9,
angle_col         = 45,
# annotation
annotation        = ann_labels,
annotation_colors = ann_colors,
# tiles
color             = cet_pal(n = 256, name = "cbd1", alpha = 1),
border_color      = NA,
cellwidth         = 20,
cellheight        = 0.5,
)
# save it
tiff(file=paste0(figdir,'/Heatmap_vsd_bcorr.tiff'),
width=10, height=12, units="in", res=300)
hm
dev.off()
pdf(file=paste0(figdir,'/Heatmap_vsd_bcorr.pdf'),
width=10, height=12)
hm
dev.off()
png(file=paste0(figdir,'/Heatmap_vsd_bcorr.png'),
width=10, height=12, units="in", res=300)
hm
dev.off()
svg(file=paste0(figdir,'/Heatmap_vsd_bcorr.svg'),
width=10, height=12)
hm
dev.off()
hm
knitr::opts_chunk$set(dev = 'png',
fig.align = 'center', fig.height = 5, fig.width = 8.5,
pdf.options(encoding = "ISOLatin9.enc"),
fig.path='integration/figures/', warning=FALSE, message=FALSE)
if (!require("librarian")) install.packages("librarian")
# data
librarian::shelf(venneuler, dplyr, reshape2, biomaRt)
# graphics
librarian::shelf(UpSetR, VennDiagram)
# convenience
librarian::shelf(here)
setwd(here::here()) # to distinguish from dplyr::here()
# experimental design and labels
targets <- readRDS('output/targets.RDS')
# add column to distinguish control batches
targets$sample_type <- targets$Condition
targets$sample_type[targets$sample_type=='Control'] <- str_c(
targets$Condition, "_", targets$Batch)[targets$Condition=='Control']
targets[,c('Condition', 'sampleIDs', 'sample_type')]
saveRDS(targets, file='output/targets.RDS')
readRDS('output/Control_vs_DaOE.RDS')
